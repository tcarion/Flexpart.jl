var documenterSearchIndex = {"docs":
[{"location":"lib/internals/flexpart/","page":"Internals","title":"Internals","text":"CurrentModule = Flexpart","category":"page"},{"location":"lib/internals/flexpart/","page":"Internals","title":"Internals","text":"Modules = [Flexpart]","category":"page"},{"location":"lib/internals/flexpart/#Flexpart.DeterministicOutput","page":"Internals","title":"Flexpart.DeterministicOutput","text":"DeterministicInput\n\nObject that represents a deterministic output file.\n\npath::String\n\n: Path to the output file\n\ntype::String\n\n: Type of the output file (ncf, binary)\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/flexpart/#Flexpart.EnsembleOutput","page":"Internals","title":"Flexpart.EnsembleOutput","text":"EnsembleInput\n\nObject that represents a ensemble output file.\n\npath::String\n\n: Path to the output file\n\ntype::String\n\n: Type of the output file (ncf, binary)\n\nmember::Int64\n\n: Ensemble member number\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/flexpart/#Flexpart.FlexpartDir","page":"Internals","title":"Flexpart.FlexpartDir","text":"struct FlexpartDir{SimType} <: Flexpart.AbstractFlexDir\n\nFlexpartDir represents the directory where the pathnames file is located. pathnames is the file indicating the paths  to the files and directories needed by Flexpart (options, output, input and available).\n\nThe FlexpartDir object also indicates the type of the simulation:\n\nFlexpartDir{Deterministic} for deterministic flexpart runs\nFlexpartDir{Ensemble} for ensemble flexpart runs\n\nIf no type parameter is provided when using FlexpartDir constructors, the default will be Deterministic.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/flexpart/#Flexpart.FlexpartDir-Tuple{String}","page":"Internals","title":"Flexpart.FlexpartDir","text":"FlexpartDir(path::String) -> FlexpartDir{Deterministic}\n\n\nRead the pathnames file in path to create a FlexpartDir.\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/flexpart/#Flexpart.FlexpartDir-Union{Tuple{Function}, Tuple{T}} where T","page":"Internals","title":"Flexpart.FlexpartDir","text":"FlexpartDir(f::Function) -> Any\n\n\nApply the function f to a FlexpartDir created in a temporary directory, and remove all of its content upon completion.\n\nExamples\n\njulia> FlexpartDir() do fpdir             default_run(fpdir)         end ```\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/flexpart/#Flexpart.FlexpartDir-Union{Tuple{}, Tuple{T}} where T","page":"Internals","title":"Flexpart.FlexpartDir","text":"FlexpartDir() -> FlexpartDir{Deterministic}\n\n\nCreate a FlexpartDir in a temporary directory whith the default options and pathnames. It can be copied afterwards with copy.\n\nThe default paths for the pathnames are:\n\n[\"./options/\", \"./output/\", \"./input/\", \"./AVAILABLE\"]\n\nExamples\n\njulia> FlexpartDir()\nFlexpartDir{Deterministic} @ /tmp/jl_a8gDYX\npathnames:\n        :options => \"./options/\"\n        :output => \"./output/\"\n        :input => \"./input/\"\n        :available => \"./AVAILABLE\"\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/flexpart/#Flexpart.FpPathnames","page":"Internals","title":"Flexpart.FpPathnames","text":"FpPathnames\n\nObject that represents the pathnames file. The paths are expected in the following order:\n\noptions\noutput\ninput\navailable\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/flexpart/#Flexpart.copy-Tuple{FlexpartDir, String}","page":"Internals","title":"Flexpart.copy","text":"copy(fpdir::FlexpartDir, path::String)\n\n\nCopy an existing FlexpartDir to path.\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/flexpart/#Flexpart.run-Tuple{FlexpartDir{Deterministic}}","page":"Internals","title":"Flexpart.run","text":"run(fpdir::FlexpartDir{Deterministic}; log) -> Any\n\n\nRun Flexpart using the paths of fpdir.\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/flexpart/#Flexpart.save-Tuple{FlexpartDir}","page":"Internals","title":"Flexpart.save","text":"save(fpdir::FlexpartDir)\n\n\nWrite the current FlexpartDir paths to the pathnames file.\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/flexpart/#Flexpart.saveabs-Tuple{FlexpartDir}","page":"Internals","title":"Flexpart.saveabs","text":"saveabs(fpdir::FlexpartDir)\n\n\nWrite the current FlexpartDir paths to the pathnames file. Relative paths are converted to absolute path.\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/flexpart/#Flexpart.set_cmd_dates!-Tuple{FlexpartOption, Available}","page":"Internals","title":"Flexpart.set_cmd_dates!","text":"set_cmd_dates!(\n    options::FlexpartOption,\n    avs::Available\n) -> String\n\n\nUpdate the simulation start and stop options from the inputs available in avs. \n\n\n\n\n\n","category":"method"},{"location":"lib/internals/flexpart/#Flexpart.set_cmd_dates!-Tuple{FlexpartOption, Dates.DateTime, Dates.DateTime}","page":"Internals","title":"Flexpart.set_cmd_dates!","text":"set_cmd_dates!(\n    options::FlexpartOption,\n    start::Dates.DateTime,\n    stop::Dates.DateTime\n) -> String\n\n\nUpdate the simulation start and stop options with start date and stop date. \n\n\n\n\n\n","category":"method"},{"location":"lib/internals/flexpart/#Flexpart.set_point_release!-Tuple{OrderedCollections.OrderedDict{Symbol, Flexpart.FlexpartOptions.OptionEntry}, Any, Any}","page":"Internals","title":"Flexpart.set_point_release!","text":"set_point_release!(\n    release::OrderedCollections.OrderedDict{Symbol, Flexpart.FlexpartOptions.OptionEntry},\n    lon,\n    lat\n) -> Any\n\n\nUpdate a release option release location with lon and lat.\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/flexpart/#Flexpart.set_release_dates!-Tuple{OrderedCollections.OrderedDict{Symbol, Flexpart.FlexpartOptions.OptionEntry}, Dates.DateTime, Dates.DateTime}","page":"Internals","title":"Flexpart.set_release_dates!","text":"set_release_dates!(\n    release::OrderedCollections.OrderedDict{Symbol, Flexpart.FlexpartOptions.OptionEntry},\n    start::Dates.DateTime,\n    stop::Dates.DateTime\n) -> String\n\n\nUpdate a release option release start and stop datetime given the start and stop DateTime.\n\nExamples\n\njulia> fpoptions = FlexpartOption(FlexpartDir())\njulia> Flexpart.set_release_dates!(fpoptions[\"RELEASES\"][:RELEASE][1], Dates.now(), Dates.now() + Dates.Second(120))\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/flexpart/#Flexpart.set_release_duration!-Tuple{OrderedCollections.OrderedDict{Symbol, Flexpart.FlexpartOptions.OptionEntry}, Dates.DateTime, Dates.AbstractTime}","page":"Internals","title":"Flexpart.set_release_duration!","text":"set_release_duration!(\n    release::OrderedCollections.OrderedDict{Symbol, Flexpart.FlexpartOptions.OptionEntry},\n    start::Dates.DateTime,\n    duration::Dates.AbstractTime\n) -> String\n\n\nUpdate a release option release start and stop datetime given the start and duration.\n\nExamples\n\njulia> fpoptions = FlexpartOption(FlexpartDir())\njulia> Flexpart.set_release_duration!(fpoptions[\"RELEASES\"][:RELEASE][1], Dates.now(), Dates.Second(120))\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/flexpart/#Flexpart.set_specie!-Tuple{FlexpartOption, String}","page":"Internals","title":"Flexpart.set_specie!","text":"set_specie!(\n    fpoptions::FlexpartOption,\n    specie::String\n) -> Int64\n\n\nUpdate the specie number in the RELEASES options from the name specie.\n\nExamples\n\njulia> Flexpart.set_specie!(FlexpartOption(FlexpartDir()), \"CH4\")\n26\n\n\n\n\n\n","category":"method"},{"location":"#Flexpart.jl-Documentation","page":"Home","title":"Flexpart.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Flexpart.jl is a package that allow to prepare and run the Flexpart Lagrangian atmospheric dispersion model with a Julia interface. More precisely, it is possible to:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Retrieve the meteorological data from the ECMWF MARS system. It wraps the flex_extract software that retrieve the meteorological fields and pre-process them to produce inputs for Flexpart.\nModify the options of Flexpart in a Julia way.\nRun simulations with an existing installation of Flexpart.","category":"page"}]
}
